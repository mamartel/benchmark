# Allow the source files to find headers in src/
include_directories(${PROJECT_SOURCE_DIR}/src)

if (DEFINED BENCHMARK_CXX_LINKER_FLAGS)
  list(APPEND CMAKE_SHARED_LINKER_FLAGS ${BENCHMARK_CXX_LINKER_FLAGS})
  list(APPEND CMAKE_MODULE_LINKER_FLAGS ${BENCHMARK_CXX_LINKER_FLAGS})
endif()

file(GLOB
  SOURCE_FILES
    *.cc
    ${PROJECT_SOURCE_DIR}/include/benchmark/*.h
    ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

add_library(benchmark ${SOURCE_FILES})
set_target_properties(benchmark PROPERTIES
  OUTPUT_NAME "benchmark"
  VERSION ${GENERIC_LIB_VERSION}
  SOVERSION ${GENERIC_LIB_SOVERSION}
)

# Link threads.
target_link_libraries(benchmark  ${BENCHMARK_CXX_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
find_library(LIBRT rt)
if(LIBRT)
  target_link_libraries(benchmark ${LIBRT})
endif()

# We need extra libraries on Windows
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
  target_link_libraries(benchmark Shlwapi)
endif()

# Expose public API
target_include_directories(
  benchmark PUBLIC  
  $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>  
  $<INSTALL_INTERFACE:include>
)

# Install target (will install the library to specified CMAKE_INSTALL_PREFIX variable)
install(
  TARGETS benchmark
  EXPORT benchmark
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION bin
  COMPONENT library)

install(
  DIRECTORY "${PROJECT_SOURCE_DIR}/include/benchmark"
  DESTINATION include
  FILES_MATCHING PATTERN "*.*h")

# Generate CMake package version file
include(CMakePackageConfigHelpers)
write_basic_package_version_file(
  "${CMAKE_CURRENT_BINARY_DIR}/benchmarkConfig-version.cmake"
  VERSION 
    ${GENERIC_LIB_VERSION}
  COMPATIBILITY 
    AnyNewerVersion
  )

# Path of the include directory relative to the installation directory.
set(INCLUDE_DIR "include")

# Directory containing the CMake package configuration files.
set(PKG_DIR "lib/cmake/benchmark")

# Name and path of the file generated by `install(EXPORT)`.
set(TARGETS_FILE_NAME "benchmarkTargets.cmake")
set(TARGETS_FILE "${PKG_DIR}/${TARGETS_FILE_NAME}")

# Generate the CMake package configuration file
configure_package_config_file(
  "${CMAKE_SOURCE_DIR}/cmake/benchmarkConfig.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/benchmarkConfig.cmake"
  INSTALL_DESTINATION
    ${PKG_DIR}
  PATH_VARS
    "INCLUDE_DIR"
    "GENERIC_LIB_VERSION"
    "TARGETS_FILE"
  )
  
# Install package configuration and version files.
install(
  FILES 
    "${CMAKE_CURRENT_BINARY_DIR}/benchmarkConfig.cmake"
    "${CMAKE_CURRENT_BINARY_DIR}/benchmarkConfig-version.cmake"
  DESTINATION
    ${PKG_DIR}
  )
  
# Generate and install a CMake file containing code to import targets from the 
# installation tree into another project.
install(
  EXPORT benchmark
  DESTINATION 
    ${PKG_DIR}
  FILE 
    ${TARGETS_FILE_NAME}
  )